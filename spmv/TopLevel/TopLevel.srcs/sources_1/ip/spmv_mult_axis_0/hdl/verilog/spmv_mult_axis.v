// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="spmv_mult_axis,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=4.500000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.492700,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=73,HLS_SYN_DSP=21,HLS_SYN_FF=10760,HLS_SYN_LUT=9842}" *)

module spmv_mult_axis (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_vect_AWVALID,
        m_axi_vect_AWREADY,
        m_axi_vect_AWADDR,
        m_axi_vect_AWID,
        m_axi_vect_AWLEN,
        m_axi_vect_AWSIZE,
        m_axi_vect_AWBURST,
        m_axi_vect_AWLOCK,
        m_axi_vect_AWCACHE,
        m_axi_vect_AWPROT,
        m_axi_vect_AWQOS,
        m_axi_vect_AWREGION,
        m_axi_vect_AWUSER,
        m_axi_vect_WVALID,
        m_axi_vect_WREADY,
        m_axi_vect_WDATA,
        m_axi_vect_WSTRB,
        m_axi_vect_WLAST,
        m_axi_vect_WID,
        m_axi_vect_WUSER,
        m_axi_vect_ARVALID,
        m_axi_vect_ARREADY,
        m_axi_vect_ARADDR,
        m_axi_vect_ARID,
        m_axi_vect_ARLEN,
        m_axi_vect_ARSIZE,
        m_axi_vect_ARBURST,
        m_axi_vect_ARLOCK,
        m_axi_vect_ARCACHE,
        m_axi_vect_ARPROT,
        m_axi_vect_ARQOS,
        m_axi_vect_ARREGION,
        m_axi_vect_ARUSER,
        m_axi_vect_RVALID,
        m_axi_vect_RREADY,
        m_axi_vect_RDATA,
        m_axi_vect_RLAST,
        m_axi_vect_RID,
        m_axi_vect_RUSER,
        m_axi_vect_RRESP,
        m_axi_vect_BVALID,
        m_axi_vect_BREADY,
        m_axi_vect_BRESP,
        m_axi_vect_BID,
        m_axi_vect_BUSER,
        val_col_ind_stream_TDATA,
        val_col_ind_stream_TKEEP,
        val_col_ind_stream_TLAST,
        rowptr_stream_TDATA,
        rowptr_stream_TKEEP,
        rowptr_stream_TLAST,
        output_stream_TDATA,
        output_stream_TKEEP,
        output_stream_TLAST,
        val_col_ind_stream_TVALID,
        val_col_ind_stream_TREADY,
        rowptr_stream_TVALID,
        rowptr_stream_TREADY,
        output_stream_TVALID,
        output_stream_TREADY
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_VECT_ID_WIDTH = 1;
parameter    C_M_AXI_VECT_ADDR_WIDTH = 32;
parameter    C_M_AXI_VECT_DATA_WIDTH = 32;
parameter    C_M_AXI_VECT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_VECT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_VECT_WUSER_WIDTH = 1;
parameter    C_M_AXI_VECT_RUSER_WIDTH = 1;
parameter    C_M_AXI_VECT_BUSER_WIDTH = 1;
parameter    C_M_AXI_VECT_USER_VALUE = 0;
parameter    C_M_AXI_VECT_PROT_VALUE = 0;
parameter    C_M_AXI_VECT_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_VECT_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_vect_AWVALID;
input   m_axi_vect_AWREADY;
output  [C_M_AXI_VECT_ADDR_WIDTH - 1:0] m_axi_vect_AWADDR;
output  [C_M_AXI_VECT_ID_WIDTH - 1:0] m_axi_vect_AWID;
output  [7:0] m_axi_vect_AWLEN;
output  [2:0] m_axi_vect_AWSIZE;
output  [1:0] m_axi_vect_AWBURST;
output  [1:0] m_axi_vect_AWLOCK;
output  [3:0] m_axi_vect_AWCACHE;
output  [2:0] m_axi_vect_AWPROT;
output  [3:0] m_axi_vect_AWQOS;
output  [3:0] m_axi_vect_AWREGION;
output  [C_M_AXI_VECT_AWUSER_WIDTH - 1:0] m_axi_vect_AWUSER;
output   m_axi_vect_WVALID;
input   m_axi_vect_WREADY;
output  [C_M_AXI_VECT_DATA_WIDTH - 1:0] m_axi_vect_WDATA;
output  [C_M_AXI_VECT_WSTRB_WIDTH - 1:0] m_axi_vect_WSTRB;
output   m_axi_vect_WLAST;
output  [C_M_AXI_VECT_ID_WIDTH - 1:0] m_axi_vect_WID;
output  [C_M_AXI_VECT_WUSER_WIDTH - 1:0] m_axi_vect_WUSER;
output   m_axi_vect_ARVALID;
input   m_axi_vect_ARREADY;
output  [C_M_AXI_VECT_ADDR_WIDTH - 1:0] m_axi_vect_ARADDR;
output  [C_M_AXI_VECT_ID_WIDTH - 1:0] m_axi_vect_ARID;
output  [7:0] m_axi_vect_ARLEN;
output  [2:0] m_axi_vect_ARSIZE;
output  [1:0] m_axi_vect_ARBURST;
output  [1:0] m_axi_vect_ARLOCK;
output  [3:0] m_axi_vect_ARCACHE;
output  [2:0] m_axi_vect_ARPROT;
output  [3:0] m_axi_vect_ARQOS;
output  [3:0] m_axi_vect_ARREGION;
output  [C_M_AXI_VECT_ARUSER_WIDTH - 1:0] m_axi_vect_ARUSER;
input   m_axi_vect_RVALID;
output   m_axi_vect_RREADY;
input  [C_M_AXI_VECT_DATA_WIDTH - 1:0] m_axi_vect_RDATA;
input   m_axi_vect_RLAST;
input  [C_M_AXI_VECT_ID_WIDTH - 1:0] m_axi_vect_RID;
input  [C_M_AXI_VECT_RUSER_WIDTH - 1:0] m_axi_vect_RUSER;
input  [1:0] m_axi_vect_RRESP;
input   m_axi_vect_BVALID;
output   m_axi_vect_BREADY;
input  [1:0] m_axi_vect_BRESP;
input  [C_M_AXI_VECT_ID_WIDTH - 1:0] m_axi_vect_BID;
input  [C_M_AXI_VECT_BUSER_WIDTH - 1:0] m_axi_vect_BUSER;
input  [63:0] val_col_ind_stream_TDATA;
input  [3:0] val_col_ind_stream_TKEEP;
input   val_col_ind_stream_TLAST;
input  [31:0] rowptr_stream_TDATA;
input  [3:0] rowptr_stream_TKEEP;
input   rowptr_stream_TLAST;
output  [31:0] output_stream_TDATA;
output  [3:0] output_stream_TKEEP;
output   output_stream_TLAST;
input   val_col_ind_stream_TVALID;
output   val_col_ind_stream_TREADY;
input   rowptr_stream_TVALID;
output   rowptr_stream_TREADY;
output   output_stream_TVALID;
input   output_stream_TREADY;

reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] val_size;
wire   [31:0] output_size;
wire   [31:0] vect_mem;
wire    vect_AWREADY;
wire    vect_WREADY;
wire    vect_ARREADY;
wire    vect_RVALID;
wire   [31:0] vect_RDATA;
wire    vect_RLAST;
wire   [0:0] vect_RID;
wire   [0:0] vect_RUSER;
wire   [1:0] vect_RRESP;
wire    vect_BVALID;
wire   [1:0] vect_BRESP;
wire   [0:0] vect_BID;
wire   [0:0] vect_BUSER;
wire    Loop_1_proc331494_U0_ap_start;
wire    Loop_1_proc331494_U0_ap_done;
wire    Loop_1_proc331494_U0_ap_continue;
wire    Loop_1_proc331494_U0_ap_idle;
wire    Loop_1_proc331494_U0_ap_ready;
wire    Loop_1_proc331494_U0_val_col_ind_stream_TREADY;
wire   [31:0] Loop_1_proc331494_U0_val_fifo_tmp_V_din;
wire    Loop_1_proc331494_U0_val_fifo_tmp_V_write;
wire   [31:0] Loop_1_proc331494_U0_col_ind_fifo_V_din;
wire    Loop_1_proc331494_U0_col_ind_fifo_V_write;
wire   [31:0] Loop_1_proc331494_U0_val_size_out_din;
wire    Loop_1_proc331494_U0_val_size_out_write;
wire   [31:0] Loop_1_proc331494_U0_output_size_out_din;
wire    Loop_1_proc331494_U0_output_size_out_write;
wire   [31:0] Loop_1_proc331494_U0_vect_mem_out_din;
wire    Loop_1_proc331494_U0_vect_mem_out_write;
wire    Loop_2_proc34_U0_ap_start;
wire    Loop_2_proc34_U0_ap_done;
wire    Loop_2_proc34_U0_ap_continue;
wire    Loop_2_proc34_U0_ap_idle;
wire    Loop_2_proc34_U0_ap_ready;
wire    Loop_2_proc34_U0_start_out;
wire    Loop_2_proc34_U0_start_write;
wire    Loop_2_proc34_U0_val_size_read;
wire    Loop_2_proc34_U0_val_fifo_tmp_V_read;
wire   [31:0] Loop_2_proc34_U0_val_fifo_V_din;
wire    Loop_2_proc34_U0_val_fifo_V_write;
wire    Loop_2_proc34_U0_col_ind_fifo_V_read;
wire    Loop_2_proc34_U0_m_axi_vect_mem_AWVALID;
wire   [31:0] Loop_2_proc34_U0_m_axi_vect_mem_AWADDR;
wire   [0:0] Loop_2_proc34_U0_m_axi_vect_mem_AWID;
wire   [31:0] Loop_2_proc34_U0_m_axi_vect_mem_AWLEN;
wire   [2:0] Loop_2_proc34_U0_m_axi_vect_mem_AWSIZE;
wire   [1:0] Loop_2_proc34_U0_m_axi_vect_mem_AWBURST;
wire   [1:0] Loop_2_proc34_U0_m_axi_vect_mem_AWLOCK;
wire   [3:0] Loop_2_proc34_U0_m_axi_vect_mem_AWCACHE;
wire   [2:0] Loop_2_proc34_U0_m_axi_vect_mem_AWPROT;
wire   [3:0] Loop_2_proc34_U0_m_axi_vect_mem_AWQOS;
wire   [3:0] Loop_2_proc34_U0_m_axi_vect_mem_AWREGION;
wire   [0:0] Loop_2_proc34_U0_m_axi_vect_mem_AWUSER;
wire    Loop_2_proc34_U0_m_axi_vect_mem_WVALID;
wire   [31:0] Loop_2_proc34_U0_m_axi_vect_mem_WDATA;
wire   [3:0] Loop_2_proc34_U0_m_axi_vect_mem_WSTRB;
wire    Loop_2_proc34_U0_m_axi_vect_mem_WLAST;
wire   [0:0] Loop_2_proc34_U0_m_axi_vect_mem_WID;
wire   [0:0] Loop_2_proc34_U0_m_axi_vect_mem_WUSER;
wire    Loop_2_proc34_U0_m_axi_vect_mem_ARVALID;
wire   [31:0] Loop_2_proc34_U0_m_axi_vect_mem_ARADDR;
wire   [0:0] Loop_2_proc34_U0_m_axi_vect_mem_ARID;
wire   [31:0] Loop_2_proc34_U0_m_axi_vect_mem_ARLEN;
wire   [2:0] Loop_2_proc34_U0_m_axi_vect_mem_ARSIZE;
wire   [1:0] Loop_2_proc34_U0_m_axi_vect_mem_ARBURST;
wire   [1:0] Loop_2_proc34_U0_m_axi_vect_mem_ARLOCK;
wire   [3:0] Loop_2_proc34_U0_m_axi_vect_mem_ARCACHE;
wire   [2:0] Loop_2_proc34_U0_m_axi_vect_mem_ARPROT;
wire   [3:0] Loop_2_proc34_U0_m_axi_vect_mem_ARQOS;
wire   [3:0] Loop_2_proc34_U0_m_axi_vect_mem_ARREGION;
wire   [0:0] Loop_2_proc34_U0_m_axi_vect_mem_ARUSER;
wire    Loop_2_proc34_U0_m_axi_vect_mem_RREADY;
wire    Loop_2_proc34_U0_m_axi_vect_mem_BREADY;
wire    Loop_2_proc34_U0_vect_mem_offset_read;
wire   [31:0] Loop_2_proc34_U0_vect_fifo_V_din;
wire    Loop_2_proc34_U0_vect_fifo_V_write;
wire   [31:0] Loop_2_proc34_U0_val_size_out_din;
wire    Loop_2_proc34_U0_val_size_out_write;
wire    Loop_3_proc35_U0_ap_start;
wire    Loop_3_proc35_U0_ap_done;
wire    Loop_3_proc35_U0_ap_continue;
wire    Loop_3_proc35_U0_ap_idle;
wire    Loop_3_proc35_U0_ap_ready;
wire    Loop_3_proc35_U0_val_size_read;
wire    Loop_3_proc35_U0_val_fifo_V_read;
wire    Loop_3_proc35_U0_vect_fifo_V_read;
wire   [31:0] Loop_3_proc35_U0_mult_result_fifo_V_din;
wire    Loop_3_proc35_U0_mult_result_fifo_V_write;
wire    fp_add_loop_U0_ap_start;
wire    fp_add_loop_U0_ap_done;
wire    fp_add_loop_U0_ap_continue;
wire    fp_add_loop_U0_ap_idle;
wire    fp_add_loop_U0_ap_ready;
wire    fp_add_loop_U0_start_out;
wire    fp_add_loop_U0_start_write;
wire    fp_add_loop_U0_output_size_read;
wire    fp_add_loop_U0_rowptr_stream_TREADY;
wire    fp_add_loop_U0_mult_result_fifo_V_read;
wire   [31:0] fp_add_loop_U0_row_product_0_fifo_V_din;
wire    fp_add_loop_U0_row_product_0_fifo_V_write;
wire   [31:0] fp_add_loop_U0_row_product_1_fifo_V_din;
wire    fp_add_loop_U0_row_product_1_fifo_V_write;
wire   [31:0] fp_add_loop_U0_row_product_2_fifo_V_din;
wire    fp_add_loop_U0_row_product_2_fifo_V_write;
wire   [31:0] fp_add_loop_U0_row_product_3_fifo_V_din;
wire    fp_add_loop_U0_row_product_3_fifo_V_write;
wire   [31:0] fp_add_loop_U0_row_product_4_fifo_V_din;
wire    fp_add_loop_U0_row_product_4_fifo_V_write;
wire   [31:0] fp_add_loop_U0_row_product_5_fifo_V_din;
wire    fp_add_loop_U0_row_product_5_fifo_V_write;
wire   [31:0] fp_add_loop_U0_row_product_6_fifo_V_din;
wire    fp_add_loop_U0_row_product_6_fifo_V_write;
wire   [31:0] fp_add_loop_U0_row_product_7_fifo_V_din;
wire    fp_add_loop_U0_row_product_7_fifo_V_write;
wire   [31:0] fp_add_loop_U0_row_product_8_fifo_V_din;
wire    fp_add_loop_U0_row_product_8_fifo_V_write;
wire    fp_add_loop_U0_tlast_fifo_V_din;
wire    fp_add_loop_U0_tlast_fifo_V_write;
wire   [3:0] fp_add_loop_U0_tkeep_fifo_V_V_din;
wire    fp_add_loop_U0_tkeep_fifo_V_V_write;
wire   [31:0] fp_add_loop_U0_output_size_out_din;
wire    fp_add_loop_U0_output_size_out_write;
wire    Loop_4_proc36_U0_ap_start;
wire    Loop_4_proc36_U0_ap_done;
wire    Loop_4_proc36_U0_ap_continue;
wire    Loop_4_proc36_U0_ap_idle;
wire    Loop_4_proc36_U0_ap_ready;
wire    Loop_4_proc36_U0_output_size_read;
wire    Loop_4_proc36_U0_row_product_0_fifo_V_read;
wire    Loop_4_proc36_U0_row_product_1_fifo_V_read;
wire    Loop_4_proc36_U0_row_product_2_fifo_V_read;
wire    Loop_4_proc36_U0_row_product_3_fifo_V_read;
wire    Loop_4_proc36_U0_row_product_4_fifo_V_read;
wire    Loop_4_proc36_U0_row_product_5_fifo_V_read;
wire    Loop_4_proc36_U0_row_product_6_fifo_V_read;
wire    Loop_4_proc36_U0_row_product_7_fifo_V_read;
wire    Loop_4_proc36_U0_row_product_8_fifo_V_read;
wire    Loop_4_proc36_U0_tlast_fifo_V_read;
wire    Loop_4_proc36_U0_tkeep_fifo_V_V_read;
wire   [31:0] Loop_4_proc36_U0_output_stream_TDATA;
wire    Loop_4_proc36_U0_output_stream_TVALID;
wire   [3:0] Loop_4_proc36_U0_output_stream_TKEEP;
wire    Loop_4_proc36_U0_output_stream_TLAST;
wire    ap_sync_continue;
wire    val_fifo_tmp_V_full_n;
wire   [31:0] val_fifo_tmp_V_dout;
wire    val_fifo_tmp_V_empty_n;
wire    col_ind_fifo_V_full_n;
wire   [31:0] col_ind_fifo_V_dout;
wire    col_ind_fifo_V_empty_n;
wire    val_size_c_full_n;
wire   [31:0] val_size_c_dout;
wire    val_size_c_empty_n;
wire    output_size_c_full_n;
wire   [31:0] output_size_c_dout;
wire    output_size_c_empty_n;
wire    vect_mem_c_full_n;
wire   [31:0] vect_mem_c_dout;
wire    vect_mem_c_empty_n;
wire    val_fifo_V_full_n;
wire   [31:0] val_fifo_V_dout;
wire    val_fifo_V_empty_n;
wire    vect_fifo_V_full_n;
wire   [31:0] vect_fifo_V_dout;
wire    vect_fifo_V_empty_n;
wire    val_size_c11_full_n;
wire   [31:0] val_size_c11_dout;
wire    val_size_c11_empty_n;
wire    mult_result_fifo_V_full_n;
wire   [31:0] mult_result_fifo_V_dout;
wire    mult_result_fifo_V_empty_n;
wire    row_product_0_fifo_V_full_n;
wire   [31:0] row_product_0_fifo_V_dout;
wire    row_product_0_fifo_V_empty_n;
wire    row_product_1_fifo_V_full_n;
wire   [31:0] row_product_1_fifo_V_dout;
wire    row_product_1_fifo_V_empty_n;
wire    row_product_2_fifo_V_full_n;
wire   [31:0] row_product_2_fifo_V_dout;
wire    row_product_2_fifo_V_empty_n;
wire    row_product_3_fifo_V_full_n;
wire   [31:0] row_product_3_fifo_V_dout;
wire    row_product_3_fifo_V_empty_n;
wire    row_product_4_fifo_V_full_n;
wire   [31:0] row_product_4_fifo_V_dout;
wire    row_product_4_fifo_V_empty_n;
wire    row_product_5_fifo_V_full_n;
wire   [31:0] row_product_5_fifo_V_dout;
wire    row_product_5_fifo_V_empty_n;
wire    row_product_6_fifo_V_full_n;
wire   [31:0] row_product_6_fifo_V_dout;
wire    row_product_6_fifo_V_empty_n;
wire    row_product_7_fifo_V_full_n;
wire   [31:0] row_product_7_fifo_V_dout;
wire    row_product_7_fifo_V_empty_n;
wire    row_product_8_fifo_V_full_n;
wire   [31:0] row_product_8_fifo_V_dout;
wire    row_product_8_fifo_V_empty_n;
wire   [0:0] tlast_fifo_V_din;
wire    tlast_fifo_V_full_n;
wire   [0:0] tlast_fifo_V_dout;
wire    tlast_fifo_V_empty_n;
wire    tkeep_fifo_V_V_full_n;
wire   [3:0] tkeep_fifo_V_V_dout;
wire    tkeep_fifo_V_V_empty_n;
wire    output_size_c12_full_n;
wire   [31:0] output_size_c12_dout;
wire    output_size_c12_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Loop_2_proc34_U0_ap_ready;
wire    ap_sync_Loop_2_proc34_U0_ap_ready;
reg   [1:0] Loop_2_proc34_U0_ap_ready_count;
reg    ap_sync_reg_Loop_1_proc331494_U0_ap_ready;
wire    ap_sync_Loop_1_proc331494_U0_ap_ready;
reg   [1:0] Loop_1_proc331494_U0_ap_ready_count;
reg    ap_sync_reg_fp_add_loop_U0_ap_ready;
wire    ap_sync_fp_add_loop_U0_ap_ready;
reg   [1:0] fp_add_loop_U0_ap_ready_count;
wire    Loop_1_proc331494_U0_start_full_n;
wire    Loop_1_proc331494_U0_start_write;
wire   [0:0] start_for_Loop_3_proc35_U0_din;
wire    start_for_Loop_3_proc35_U0_full_n;
wire   [0:0] start_for_Loop_3_proc35_U0_dout;
wire    start_for_Loop_3_proc35_U0_empty_n;
wire    Loop_3_proc35_U0_start_full_n;
wire    Loop_3_proc35_U0_start_write;
wire   [0:0] start_for_Loop_4_proc36_U0_din;
wire    start_for_Loop_4_proc36_U0_full_n;
wire   [0:0] start_for_Loop_4_proc36_U0_dout;
wire    start_for_Loop_4_proc36_U0_empty_n;
wire    Loop_4_proc36_U0_start_full_n;
wire    Loop_4_proc36_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_Loop_2_proc34_U0_ap_ready = 1'b0;
#0 Loop_2_proc34_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Loop_1_proc331494_U0_ap_ready = 1'b0;
#0 Loop_1_proc331494_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_fp_add_loop_U0_ap_ready = 1'b0;
#0 fp_add_loop_U0_ap_ready_count = 2'd0;
end

spmv_mult_axis_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
spmv_mult_axis_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .val_size(val_size),
    .output_size(output_size),
    .vect_mem(vect_mem)
);

spmv_mult_axis_vect_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 2053 ),
    .NUM_READ_OUTSTANDING( 2048 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_VECT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_VECT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_VECT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_VECT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_VECT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_VECT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_VECT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_VECT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_VECT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_VECT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_VECT_CACHE_VALUE ))
spmv_mult_axis_vect_m_axi_U(
    .AWVALID(m_axi_vect_AWVALID),
    .AWREADY(m_axi_vect_AWREADY),
    .AWADDR(m_axi_vect_AWADDR),
    .AWID(m_axi_vect_AWID),
    .AWLEN(m_axi_vect_AWLEN),
    .AWSIZE(m_axi_vect_AWSIZE),
    .AWBURST(m_axi_vect_AWBURST),
    .AWLOCK(m_axi_vect_AWLOCK),
    .AWCACHE(m_axi_vect_AWCACHE),
    .AWPROT(m_axi_vect_AWPROT),
    .AWQOS(m_axi_vect_AWQOS),
    .AWREGION(m_axi_vect_AWREGION),
    .AWUSER(m_axi_vect_AWUSER),
    .WVALID(m_axi_vect_WVALID),
    .WREADY(m_axi_vect_WREADY),
    .WDATA(m_axi_vect_WDATA),
    .WSTRB(m_axi_vect_WSTRB),
    .WLAST(m_axi_vect_WLAST),
    .WID(m_axi_vect_WID),
    .WUSER(m_axi_vect_WUSER),
    .ARVALID(m_axi_vect_ARVALID),
    .ARREADY(m_axi_vect_ARREADY),
    .ARADDR(m_axi_vect_ARADDR),
    .ARID(m_axi_vect_ARID),
    .ARLEN(m_axi_vect_ARLEN),
    .ARSIZE(m_axi_vect_ARSIZE),
    .ARBURST(m_axi_vect_ARBURST),
    .ARLOCK(m_axi_vect_ARLOCK),
    .ARCACHE(m_axi_vect_ARCACHE),
    .ARPROT(m_axi_vect_ARPROT),
    .ARQOS(m_axi_vect_ARQOS),
    .ARREGION(m_axi_vect_ARREGION),
    .ARUSER(m_axi_vect_ARUSER),
    .RVALID(m_axi_vect_RVALID),
    .RREADY(m_axi_vect_RREADY),
    .RDATA(m_axi_vect_RDATA),
    .RLAST(m_axi_vect_RLAST),
    .RID(m_axi_vect_RID),
    .RUSER(m_axi_vect_RUSER),
    .RRESP(m_axi_vect_RRESP),
    .BVALID(m_axi_vect_BVALID),
    .BREADY(m_axi_vect_BREADY),
    .BRESP(m_axi_vect_BRESP),
    .BID(m_axi_vect_BID),
    .BUSER(m_axi_vect_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Loop_2_proc34_U0_m_axi_vect_mem_ARVALID),
    .I_ARREADY(vect_ARREADY),
    .I_ARADDR(Loop_2_proc34_U0_m_axi_vect_mem_ARADDR),
    .I_ARID(Loop_2_proc34_U0_m_axi_vect_mem_ARID),
    .I_ARLEN(Loop_2_proc34_U0_m_axi_vect_mem_ARLEN),
    .I_ARSIZE(Loop_2_proc34_U0_m_axi_vect_mem_ARSIZE),
    .I_ARLOCK(Loop_2_proc34_U0_m_axi_vect_mem_ARLOCK),
    .I_ARCACHE(Loop_2_proc34_U0_m_axi_vect_mem_ARCACHE),
    .I_ARQOS(Loop_2_proc34_U0_m_axi_vect_mem_ARQOS),
    .I_ARPROT(Loop_2_proc34_U0_m_axi_vect_mem_ARPROT),
    .I_ARUSER(Loop_2_proc34_U0_m_axi_vect_mem_ARUSER),
    .I_ARBURST(Loop_2_proc34_U0_m_axi_vect_mem_ARBURST),
    .I_ARREGION(Loop_2_proc34_U0_m_axi_vect_mem_ARREGION),
    .I_RVALID(vect_RVALID),
    .I_RREADY(Loop_2_proc34_U0_m_axi_vect_mem_RREADY),
    .I_RDATA(vect_RDATA),
    .I_RID(vect_RID),
    .I_RUSER(vect_RUSER),
    .I_RRESP(vect_RRESP),
    .I_RLAST(vect_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(vect_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(vect_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(vect_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(vect_BRESP),
    .I_BID(vect_BID),
    .I_BUSER(vect_BUSER)
);

Loop_1_proc331494 Loop_1_proc331494_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_1_proc331494_U0_ap_start),
    .ap_done(Loop_1_proc331494_U0_ap_done),
    .ap_continue(Loop_1_proc331494_U0_ap_continue),
    .ap_idle(Loop_1_proc331494_U0_ap_idle),
    .ap_ready(Loop_1_proc331494_U0_ap_ready),
    .val_size(val_size),
    .val_col_ind_stream_TDATA(val_col_ind_stream_TDATA),
    .val_col_ind_stream_TVALID(val_col_ind_stream_TVALID),
    .val_col_ind_stream_TREADY(Loop_1_proc331494_U0_val_col_ind_stream_TREADY),
    .val_col_ind_stream_TKEEP(val_col_ind_stream_TKEEP),
    .val_col_ind_stream_TLAST(val_col_ind_stream_TLAST),
    .val_fifo_tmp_V_din(Loop_1_proc331494_U0_val_fifo_tmp_V_din),
    .val_fifo_tmp_V_full_n(val_fifo_tmp_V_full_n),
    .val_fifo_tmp_V_write(Loop_1_proc331494_U0_val_fifo_tmp_V_write),
    .col_ind_fifo_V_din(Loop_1_proc331494_U0_col_ind_fifo_V_din),
    .col_ind_fifo_V_full_n(col_ind_fifo_V_full_n),
    .col_ind_fifo_V_write(Loop_1_proc331494_U0_col_ind_fifo_V_write),
    .output_size(output_size),
    .val_size_out_din(Loop_1_proc331494_U0_val_size_out_din),
    .val_size_out_full_n(val_size_c_full_n),
    .val_size_out_write(Loop_1_proc331494_U0_val_size_out_write),
    .output_size_out_din(Loop_1_proc331494_U0_output_size_out_din),
    .output_size_out_full_n(output_size_c_full_n),
    .output_size_out_write(Loop_1_proc331494_U0_output_size_out_write),
    .vect_mem(vect_mem),
    .vect_mem_out_din(Loop_1_proc331494_U0_vect_mem_out_din),
    .vect_mem_out_full_n(vect_mem_c_full_n),
    .vect_mem_out_write(Loop_1_proc331494_U0_vect_mem_out_write)
);

Loop_2_proc34 Loop_2_proc34_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_2_proc34_U0_ap_start),
    .start_full_n(start_for_Loop_3_proc35_U0_full_n),
    .ap_done(Loop_2_proc34_U0_ap_done),
    .ap_continue(Loop_2_proc34_U0_ap_continue),
    .ap_idle(Loop_2_proc34_U0_ap_idle),
    .ap_ready(Loop_2_proc34_U0_ap_ready),
    .start_out(Loop_2_proc34_U0_start_out),
    .start_write(Loop_2_proc34_U0_start_write),
    .val_size_dout(val_size_c_dout),
    .val_size_empty_n(val_size_c_empty_n),
    .val_size_read(Loop_2_proc34_U0_val_size_read),
    .val_fifo_tmp_V_dout(val_fifo_tmp_V_dout),
    .val_fifo_tmp_V_empty_n(val_fifo_tmp_V_empty_n),
    .val_fifo_tmp_V_read(Loop_2_proc34_U0_val_fifo_tmp_V_read),
    .val_fifo_V_din(Loop_2_proc34_U0_val_fifo_V_din),
    .val_fifo_V_full_n(val_fifo_V_full_n),
    .val_fifo_V_write(Loop_2_proc34_U0_val_fifo_V_write),
    .col_ind_fifo_V_dout(col_ind_fifo_V_dout),
    .col_ind_fifo_V_empty_n(col_ind_fifo_V_empty_n),
    .col_ind_fifo_V_read(Loop_2_proc34_U0_col_ind_fifo_V_read),
    .m_axi_vect_mem_AWVALID(Loop_2_proc34_U0_m_axi_vect_mem_AWVALID),
    .m_axi_vect_mem_AWREADY(1'b0),
    .m_axi_vect_mem_AWADDR(Loop_2_proc34_U0_m_axi_vect_mem_AWADDR),
    .m_axi_vect_mem_AWID(Loop_2_proc34_U0_m_axi_vect_mem_AWID),
    .m_axi_vect_mem_AWLEN(Loop_2_proc34_U0_m_axi_vect_mem_AWLEN),
    .m_axi_vect_mem_AWSIZE(Loop_2_proc34_U0_m_axi_vect_mem_AWSIZE),
    .m_axi_vect_mem_AWBURST(Loop_2_proc34_U0_m_axi_vect_mem_AWBURST),
    .m_axi_vect_mem_AWLOCK(Loop_2_proc34_U0_m_axi_vect_mem_AWLOCK),
    .m_axi_vect_mem_AWCACHE(Loop_2_proc34_U0_m_axi_vect_mem_AWCACHE),
    .m_axi_vect_mem_AWPROT(Loop_2_proc34_U0_m_axi_vect_mem_AWPROT),
    .m_axi_vect_mem_AWQOS(Loop_2_proc34_U0_m_axi_vect_mem_AWQOS),
    .m_axi_vect_mem_AWREGION(Loop_2_proc34_U0_m_axi_vect_mem_AWREGION),
    .m_axi_vect_mem_AWUSER(Loop_2_proc34_U0_m_axi_vect_mem_AWUSER),
    .m_axi_vect_mem_WVALID(Loop_2_proc34_U0_m_axi_vect_mem_WVALID),
    .m_axi_vect_mem_WREADY(1'b0),
    .m_axi_vect_mem_WDATA(Loop_2_proc34_U0_m_axi_vect_mem_WDATA),
    .m_axi_vect_mem_WSTRB(Loop_2_proc34_U0_m_axi_vect_mem_WSTRB),
    .m_axi_vect_mem_WLAST(Loop_2_proc34_U0_m_axi_vect_mem_WLAST),
    .m_axi_vect_mem_WID(Loop_2_proc34_U0_m_axi_vect_mem_WID),
    .m_axi_vect_mem_WUSER(Loop_2_proc34_U0_m_axi_vect_mem_WUSER),
    .m_axi_vect_mem_ARVALID(Loop_2_proc34_U0_m_axi_vect_mem_ARVALID),
    .m_axi_vect_mem_ARREADY(vect_ARREADY),
    .m_axi_vect_mem_ARADDR(Loop_2_proc34_U0_m_axi_vect_mem_ARADDR),
    .m_axi_vect_mem_ARID(Loop_2_proc34_U0_m_axi_vect_mem_ARID),
    .m_axi_vect_mem_ARLEN(Loop_2_proc34_U0_m_axi_vect_mem_ARLEN),
    .m_axi_vect_mem_ARSIZE(Loop_2_proc34_U0_m_axi_vect_mem_ARSIZE),
    .m_axi_vect_mem_ARBURST(Loop_2_proc34_U0_m_axi_vect_mem_ARBURST),
    .m_axi_vect_mem_ARLOCK(Loop_2_proc34_U0_m_axi_vect_mem_ARLOCK),
    .m_axi_vect_mem_ARCACHE(Loop_2_proc34_U0_m_axi_vect_mem_ARCACHE),
    .m_axi_vect_mem_ARPROT(Loop_2_proc34_U0_m_axi_vect_mem_ARPROT),
    .m_axi_vect_mem_ARQOS(Loop_2_proc34_U0_m_axi_vect_mem_ARQOS),
    .m_axi_vect_mem_ARREGION(Loop_2_proc34_U0_m_axi_vect_mem_ARREGION),
    .m_axi_vect_mem_ARUSER(Loop_2_proc34_U0_m_axi_vect_mem_ARUSER),
    .m_axi_vect_mem_RVALID(vect_RVALID),
    .m_axi_vect_mem_RREADY(Loop_2_proc34_U0_m_axi_vect_mem_RREADY),
    .m_axi_vect_mem_RDATA(vect_RDATA),
    .m_axi_vect_mem_RLAST(vect_RLAST),
    .m_axi_vect_mem_RID(vect_RID),
    .m_axi_vect_mem_RUSER(vect_RUSER),
    .m_axi_vect_mem_RRESP(vect_RRESP),
    .m_axi_vect_mem_BVALID(1'b0),
    .m_axi_vect_mem_BREADY(Loop_2_proc34_U0_m_axi_vect_mem_BREADY),
    .m_axi_vect_mem_BRESP(2'd0),
    .m_axi_vect_mem_BID(1'd0),
    .m_axi_vect_mem_BUSER(1'd0),
    .vect_mem_offset_dout(vect_mem_c_dout),
    .vect_mem_offset_empty_n(vect_mem_c_empty_n),
    .vect_mem_offset_read(Loop_2_proc34_U0_vect_mem_offset_read),
    .vect_fifo_V_din(Loop_2_proc34_U0_vect_fifo_V_din),
    .vect_fifo_V_full_n(vect_fifo_V_full_n),
    .vect_fifo_V_write(Loop_2_proc34_U0_vect_fifo_V_write),
    .val_size_out_din(Loop_2_proc34_U0_val_size_out_din),
    .val_size_out_full_n(val_size_c11_full_n),
    .val_size_out_write(Loop_2_proc34_U0_val_size_out_write)
);

Loop_3_proc35 Loop_3_proc35_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_3_proc35_U0_ap_start),
    .ap_done(Loop_3_proc35_U0_ap_done),
    .ap_continue(Loop_3_proc35_U0_ap_continue),
    .ap_idle(Loop_3_proc35_U0_ap_idle),
    .ap_ready(Loop_3_proc35_U0_ap_ready),
    .val_size_dout(val_size_c11_dout),
    .val_size_empty_n(val_size_c11_empty_n),
    .val_size_read(Loop_3_proc35_U0_val_size_read),
    .val_fifo_V_dout(val_fifo_V_dout),
    .val_fifo_V_empty_n(val_fifo_V_empty_n),
    .val_fifo_V_read(Loop_3_proc35_U0_val_fifo_V_read),
    .vect_fifo_V_dout(vect_fifo_V_dout),
    .vect_fifo_V_empty_n(vect_fifo_V_empty_n),
    .vect_fifo_V_read(Loop_3_proc35_U0_vect_fifo_V_read),
    .mult_result_fifo_V_din(Loop_3_proc35_U0_mult_result_fifo_V_din),
    .mult_result_fifo_V_full_n(mult_result_fifo_V_full_n),
    .mult_result_fifo_V_write(Loop_3_proc35_U0_mult_result_fifo_V_write)
);

fp_add_loop fp_add_loop_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(fp_add_loop_U0_ap_start),
    .start_full_n(start_for_Loop_4_proc36_U0_full_n),
    .ap_done(fp_add_loop_U0_ap_done),
    .ap_continue(fp_add_loop_U0_ap_continue),
    .ap_idle(fp_add_loop_U0_ap_idle),
    .ap_ready(fp_add_loop_U0_ap_ready),
    .start_out(fp_add_loop_U0_start_out),
    .start_write(fp_add_loop_U0_start_write),
    .output_size_dout(output_size_c_dout),
    .output_size_empty_n(output_size_c_empty_n),
    .output_size_read(fp_add_loop_U0_output_size_read),
    .rowptr_stream_TDATA(rowptr_stream_TDATA),
    .rowptr_stream_TVALID(rowptr_stream_TVALID),
    .rowptr_stream_TREADY(fp_add_loop_U0_rowptr_stream_TREADY),
    .rowptr_stream_TKEEP(rowptr_stream_TKEEP),
    .rowptr_stream_TLAST(rowptr_stream_TLAST),
    .mult_result_fifo_V_dout(mult_result_fifo_V_dout),
    .mult_result_fifo_V_empty_n(mult_result_fifo_V_empty_n),
    .mult_result_fifo_V_read(fp_add_loop_U0_mult_result_fifo_V_read),
    .row_product_0_fifo_V_din(fp_add_loop_U0_row_product_0_fifo_V_din),
    .row_product_0_fifo_V_full_n(row_product_0_fifo_V_full_n),
    .row_product_0_fifo_V_write(fp_add_loop_U0_row_product_0_fifo_V_write),
    .row_product_1_fifo_V_din(fp_add_loop_U0_row_product_1_fifo_V_din),
    .row_product_1_fifo_V_full_n(row_product_1_fifo_V_full_n),
    .row_product_1_fifo_V_write(fp_add_loop_U0_row_product_1_fifo_V_write),
    .row_product_2_fifo_V_din(fp_add_loop_U0_row_product_2_fifo_V_din),
    .row_product_2_fifo_V_full_n(row_product_2_fifo_V_full_n),
    .row_product_2_fifo_V_write(fp_add_loop_U0_row_product_2_fifo_V_write),
    .row_product_3_fifo_V_din(fp_add_loop_U0_row_product_3_fifo_V_din),
    .row_product_3_fifo_V_full_n(row_product_3_fifo_V_full_n),
    .row_product_3_fifo_V_write(fp_add_loop_U0_row_product_3_fifo_V_write),
    .row_product_4_fifo_V_din(fp_add_loop_U0_row_product_4_fifo_V_din),
    .row_product_4_fifo_V_full_n(row_product_4_fifo_V_full_n),
    .row_product_4_fifo_V_write(fp_add_loop_U0_row_product_4_fifo_V_write),
    .row_product_5_fifo_V_din(fp_add_loop_U0_row_product_5_fifo_V_din),
    .row_product_5_fifo_V_full_n(row_product_5_fifo_V_full_n),
    .row_product_5_fifo_V_write(fp_add_loop_U0_row_product_5_fifo_V_write),
    .row_product_6_fifo_V_din(fp_add_loop_U0_row_product_6_fifo_V_din),
    .row_product_6_fifo_V_full_n(row_product_6_fifo_V_full_n),
    .row_product_6_fifo_V_write(fp_add_loop_U0_row_product_6_fifo_V_write),
    .row_product_7_fifo_V_din(fp_add_loop_U0_row_product_7_fifo_V_din),
    .row_product_7_fifo_V_full_n(row_product_7_fifo_V_full_n),
    .row_product_7_fifo_V_write(fp_add_loop_U0_row_product_7_fifo_V_write),
    .row_product_8_fifo_V_din(fp_add_loop_U0_row_product_8_fifo_V_din),
    .row_product_8_fifo_V_full_n(row_product_8_fifo_V_full_n),
    .row_product_8_fifo_V_write(fp_add_loop_U0_row_product_8_fifo_V_write),
    .tlast_fifo_V_din(fp_add_loop_U0_tlast_fifo_V_din),
    .tlast_fifo_V_full_n(tlast_fifo_V_full_n),
    .tlast_fifo_V_write(fp_add_loop_U0_tlast_fifo_V_write),
    .tkeep_fifo_V_V_din(fp_add_loop_U0_tkeep_fifo_V_V_din),
    .tkeep_fifo_V_V_full_n(tkeep_fifo_V_V_full_n),
    .tkeep_fifo_V_V_write(fp_add_loop_U0_tkeep_fifo_V_V_write),
    .output_size_out_din(fp_add_loop_U0_output_size_out_din),
    .output_size_out_full_n(output_size_c12_full_n),
    .output_size_out_write(fp_add_loop_U0_output_size_out_write)
);

Loop_4_proc36 Loop_4_proc36_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_4_proc36_U0_ap_start),
    .ap_done(Loop_4_proc36_U0_ap_done),
    .ap_continue(Loop_4_proc36_U0_ap_continue),
    .ap_idle(Loop_4_proc36_U0_ap_idle),
    .ap_ready(Loop_4_proc36_U0_ap_ready),
    .output_size_dout(output_size_c12_dout),
    .output_size_empty_n(output_size_c12_empty_n),
    .output_size_read(Loop_4_proc36_U0_output_size_read),
    .row_product_0_fifo_V_dout(row_product_0_fifo_V_dout),
    .row_product_0_fifo_V_empty_n(row_product_0_fifo_V_empty_n),
    .row_product_0_fifo_V_read(Loop_4_proc36_U0_row_product_0_fifo_V_read),
    .row_product_1_fifo_V_dout(row_product_1_fifo_V_dout),
    .row_product_1_fifo_V_empty_n(row_product_1_fifo_V_empty_n),
    .row_product_1_fifo_V_read(Loop_4_proc36_U0_row_product_1_fifo_V_read),
    .row_product_2_fifo_V_dout(row_product_2_fifo_V_dout),
    .row_product_2_fifo_V_empty_n(row_product_2_fifo_V_empty_n),
    .row_product_2_fifo_V_read(Loop_4_proc36_U0_row_product_2_fifo_V_read),
    .row_product_3_fifo_V_dout(row_product_3_fifo_V_dout),
    .row_product_3_fifo_V_empty_n(row_product_3_fifo_V_empty_n),
    .row_product_3_fifo_V_read(Loop_4_proc36_U0_row_product_3_fifo_V_read),
    .row_product_4_fifo_V_dout(row_product_4_fifo_V_dout),
    .row_product_4_fifo_V_empty_n(row_product_4_fifo_V_empty_n),
    .row_product_4_fifo_V_read(Loop_4_proc36_U0_row_product_4_fifo_V_read),
    .row_product_5_fifo_V_dout(row_product_5_fifo_V_dout),
    .row_product_5_fifo_V_empty_n(row_product_5_fifo_V_empty_n),
    .row_product_5_fifo_V_read(Loop_4_proc36_U0_row_product_5_fifo_V_read),
    .row_product_6_fifo_V_dout(row_product_6_fifo_V_dout),
    .row_product_6_fifo_V_empty_n(row_product_6_fifo_V_empty_n),
    .row_product_6_fifo_V_read(Loop_4_proc36_U0_row_product_6_fifo_V_read),
    .row_product_7_fifo_V_dout(row_product_7_fifo_V_dout),
    .row_product_7_fifo_V_empty_n(row_product_7_fifo_V_empty_n),
    .row_product_7_fifo_V_read(Loop_4_proc36_U0_row_product_7_fifo_V_read),
    .row_product_8_fifo_V_dout(row_product_8_fifo_V_dout),
    .row_product_8_fifo_V_empty_n(row_product_8_fifo_V_empty_n),
    .row_product_8_fifo_V_read(Loop_4_proc36_U0_row_product_8_fifo_V_read),
    .tlast_fifo_V_dout(tlast_fifo_V_dout),
    .tlast_fifo_V_empty_n(tlast_fifo_V_empty_n),
    .tlast_fifo_V_read(Loop_4_proc36_U0_tlast_fifo_V_read),
    .tkeep_fifo_V_V_dout(tkeep_fifo_V_V_dout),
    .tkeep_fifo_V_V_empty_n(tkeep_fifo_V_V_empty_n),
    .tkeep_fifo_V_V_read(Loop_4_proc36_U0_tkeep_fifo_V_V_read),
    .output_stream_TDATA(Loop_4_proc36_U0_output_stream_TDATA),
    .output_stream_TVALID(Loop_4_proc36_U0_output_stream_TVALID),
    .output_stream_TREADY(output_stream_TREADY),
    .output_stream_TKEEP(Loop_4_proc36_U0_output_stream_TKEEP),
    .output_stream_TLAST(Loop_4_proc36_U0_output_stream_TLAST)
);

fifo_w32_d1_A val_fifo_tmp_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_1_proc331494_U0_val_fifo_tmp_V_din),
    .if_full_n(val_fifo_tmp_V_full_n),
    .if_write(Loop_1_proc331494_U0_val_fifo_tmp_V_write),
    .if_dout(val_fifo_tmp_V_dout),
    .if_empty_n(val_fifo_tmp_V_empty_n),
    .if_read(Loop_2_proc34_U0_val_fifo_tmp_V_read)
);

fifo_w32_d1_A col_ind_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_1_proc331494_U0_col_ind_fifo_V_din),
    .if_full_n(col_ind_fifo_V_full_n),
    .if_write(Loop_1_proc331494_U0_col_ind_fifo_V_write),
    .if_dout(col_ind_fifo_V_dout),
    .if_empty_n(col_ind_fifo_V_empty_n),
    .if_read(Loop_2_proc34_U0_col_ind_fifo_V_read)
);

fifo_w32_d1_A val_size_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_1_proc331494_U0_val_size_out_din),
    .if_full_n(val_size_c_full_n),
    .if_write(Loop_1_proc331494_U0_val_size_out_write),
    .if_dout(val_size_c_dout),
    .if_empty_n(val_size_c_empty_n),
    .if_read(Loop_2_proc34_U0_val_size_read)
);

fifo_w32_d3_A output_size_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_1_proc331494_U0_output_size_out_din),
    .if_full_n(output_size_c_full_n),
    .if_write(Loop_1_proc331494_U0_output_size_out_write),
    .if_dout(output_size_c_dout),
    .if_empty_n(output_size_c_empty_n),
    .if_read(fp_add_loop_U0_output_size_read)
);

fifo_w32_d1_A vect_mem_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_1_proc331494_U0_vect_mem_out_din),
    .if_full_n(vect_mem_c_full_n),
    .if_write(Loop_1_proc331494_U0_vect_mem_out_write),
    .if_dout(vect_mem_c_dout),
    .if_empty_n(vect_mem_c_empty_n),
    .if_read(Loop_2_proc34_U0_vect_mem_offset_read)
);

fifo_w32_d1_A val_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_2_proc34_U0_val_fifo_V_din),
    .if_full_n(val_fifo_V_full_n),
    .if_write(Loop_2_proc34_U0_val_fifo_V_write),
    .if_dout(val_fifo_V_dout),
    .if_empty_n(val_fifo_V_empty_n),
    .if_read(Loop_3_proc35_U0_val_fifo_V_read)
);

fifo_w32_d1_A vect_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_2_proc34_U0_vect_fifo_V_din),
    .if_full_n(vect_fifo_V_full_n),
    .if_write(Loop_2_proc34_U0_vect_fifo_V_write),
    .if_dout(vect_fifo_V_dout),
    .if_empty_n(vect_fifo_V_empty_n),
    .if_read(Loop_3_proc35_U0_vect_fifo_V_read)
);

fifo_w32_d1_A val_size_c11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_2_proc34_U0_val_size_out_din),
    .if_full_n(val_size_c11_full_n),
    .if_write(Loop_2_proc34_U0_val_size_out_write),
    .if_dout(val_size_c11_dout),
    .if_empty_n(val_size_c11_empty_n),
    .if_read(Loop_3_proc35_U0_val_size_read)
);

fifo_w32_d1_A mult_result_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_3_proc35_U0_mult_result_fifo_V_din),
    .if_full_n(mult_result_fifo_V_full_n),
    .if_write(Loop_3_proc35_U0_mult_result_fifo_V_write),
    .if_dout(mult_result_fifo_V_dout),
    .if_empty_n(mult_result_fifo_V_empty_n),
    .if_read(fp_add_loop_U0_mult_result_fifo_V_read)
);

fifo_w32_d1_A row_product_0_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_row_product_0_fifo_V_din),
    .if_full_n(row_product_0_fifo_V_full_n),
    .if_write(fp_add_loop_U0_row_product_0_fifo_V_write),
    .if_dout(row_product_0_fifo_V_dout),
    .if_empty_n(row_product_0_fifo_V_empty_n),
    .if_read(Loop_4_proc36_U0_row_product_0_fifo_V_read)
);

fifo_w32_d1_A row_product_1_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_row_product_1_fifo_V_din),
    .if_full_n(row_product_1_fifo_V_full_n),
    .if_write(fp_add_loop_U0_row_product_1_fifo_V_write),
    .if_dout(row_product_1_fifo_V_dout),
    .if_empty_n(row_product_1_fifo_V_empty_n),
    .if_read(Loop_4_proc36_U0_row_product_1_fifo_V_read)
);

fifo_w32_d1_A row_product_2_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_row_product_2_fifo_V_din),
    .if_full_n(row_product_2_fifo_V_full_n),
    .if_write(fp_add_loop_U0_row_product_2_fifo_V_write),
    .if_dout(row_product_2_fifo_V_dout),
    .if_empty_n(row_product_2_fifo_V_empty_n),
    .if_read(Loop_4_proc36_U0_row_product_2_fifo_V_read)
);

fifo_w32_d1_A row_product_3_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_row_product_3_fifo_V_din),
    .if_full_n(row_product_3_fifo_V_full_n),
    .if_write(fp_add_loop_U0_row_product_3_fifo_V_write),
    .if_dout(row_product_3_fifo_V_dout),
    .if_empty_n(row_product_3_fifo_V_empty_n),
    .if_read(Loop_4_proc36_U0_row_product_3_fifo_V_read)
);

fifo_w32_d1_A row_product_4_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_row_product_4_fifo_V_din),
    .if_full_n(row_product_4_fifo_V_full_n),
    .if_write(fp_add_loop_U0_row_product_4_fifo_V_write),
    .if_dout(row_product_4_fifo_V_dout),
    .if_empty_n(row_product_4_fifo_V_empty_n),
    .if_read(Loop_4_proc36_U0_row_product_4_fifo_V_read)
);

fifo_w32_d1_A row_product_5_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_row_product_5_fifo_V_din),
    .if_full_n(row_product_5_fifo_V_full_n),
    .if_write(fp_add_loop_U0_row_product_5_fifo_V_write),
    .if_dout(row_product_5_fifo_V_dout),
    .if_empty_n(row_product_5_fifo_V_empty_n),
    .if_read(Loop_4_proc36_U0_row_product_5_fifo_V_read)
);

fifo_w32_d1_A row_product_6_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_row_product_6_fifo_V_din),
    .if_full_n(row_product_6_fifo_V_full_n),
    .if_write(fp_add_loop_U0_row_product_6_fifo_V_write),
    .if_dout(row_product_6_fifo_V_dout),
    .if_empty_n(row_product_6_fifo_V_empty_n),
    .if_read(Loop_4_proc36_U0_row_product_6_fifo_V_read)
);

fifo_w32_d1_A row_product_7_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_row_product_7_fifo_V_din),
    .if_full_n(row_product_7_fifo_V_full_n),
    .if_write(fp_add_loop_U0_row_product_7_fifo_V_write),
    .if_dout(row_product_7_fifo_V_dout),
    .if_empty_n(row_product_7_fifo_V_empty_n),
    .if_read(Loop_4_proc36_U0_row_product_7_fifo_V_read)
);

fifo_w32_d1_A row_product_8_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_row_product_8_fifo_V_din),
    .if_full_n(row_product_8_fifo_V_full_n),
    .if_write(fp_add_loop_U0_row_product_8_fifo_V_write),
    .if_dout(row_product_8_fifo_V_dout),
    .if_empty_n(row_product_8_fifo_V_empty_n),
    .if_read(Loop_4_proc36_U0_row_product_8_fifo_V_read)
);

fifo_w1_d1_A tlast_fifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tlast_fifo_V_din),
    .if_full_n(tlast_fifo_V_full_n),
    .if_write(fp_add_loop_U0_tlast_fifo_V_write),
    .if_dout(tlast_fifo_V_dout),
    .if_empty_n(tlast_fifo_V_empty_n),
    .if_read(Loop_4_proc36_U0_tlast_fifo_V_read)
);

fifo_w4_d1_A tkeep_fifo_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_tkeep_fifo_V_V_din),
    .if_full_n(tkeep_fifo_V_V_full_n),
    .if_write(fp_add_loop_U0_tkeep_fifo_V_V_write),
    .if_dout(tkeep_fifo_V_V_dout),
    .if_empty_n(tkeep_fifo_V_V_empty_n),
    .if_read(Loop_4_proc36_U0_tkeep_fifo_V_V_read)
);

fifo_w32_d1_A output_size_c12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fp_add_loop_U0_output_size_out_din),
    .if_full_n(output_size_c12_full_n),
    .if_write(fp_add_loop_U0_output_size_out_write),
    .if_dout(output_size_c12_dout),
    .if_empty_n(output_size_c12_empty_n),
    .if_read(Loop_4_proc36_U0_output_size_read)
);

start_for_Loop_3_dEe start_for_Loop_3_dEe_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Loop_3_proc35_U0_din),
    .if_full_n(start_for_Loop_3_proc35_U0_full_n),
    .if_write(Loop_2_proc34_U0_start_write),
    .if_dout(start_for_Loop_3_proc35_U0_dout),
    .if_empty_n(start_for_Loop_3_proc35_U0_empty_n),
    .if_read(Loop_3_proc35_U0_ap_ready)
);

start_for_Loop_4_eOg start_for_Loop_4_eOg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Loop_4_proc36_U0_din),
    .if_full_n(start_for_Loop_4_proc36_U0_full_n),
    .if_write(fp_add_loop_U0_start_write),
    .if_dout(start_for_Loop_4_proc36_U0_dout),
    .if_empty_n(start_for_Loop_4_proc36_U0_empty_n),
    .if_read(Loop_4_proc36_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Loop_1_proc331494_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_1_proc331494_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_1_proc331494_U0_ap_ready <= ap_sync_Loop_1_proc331494_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Loop_2_proc34_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_2_proc34_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_2_proc34_U0_ap_ready <= ap_sync_Loop_2_proc34_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_fp_add_loop_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_fp_add_loop_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_fp_add_loop_U0_ap_ready <= ap_sync_fp_add_loop_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == Loop_1_proc331494_U0_ap_ready))) begin
        Loop_1_proc331494_U0_ap_ready_count <= (Loop_1_proc331494_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Loop_1_proc331494_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Loop_1_proc331494_U0_ap_ready_count <= (Loop_1_proc331494_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == Loop_2_proc34_U0_ap_ready))) begin
        Loop_2_proc34_U0_ap_ready_count <= (Loop_2_proc34_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Loop_2_proc34_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Loop_2_proc34_U0_ap_ready_count <= (Loop_2_proc34_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (fp_add_loop_U0_ap_ready == 1'b0))) begin
        fp_add_loop_U0_ap_ready_count <= (fp_add_loop_U0_ap_ready_count - 2'd1);
    end else if (((fp_add_loop_U0_ap_ready == 1'b1) & (ap_sync_ready == 1'b0))) begin
        fp_add_loop_U0_ap_ready_count <= (fp_add_loop_U0_ap_ready_count + 2'd1);
    end
end

assign Loop_1_proc331494_U0_ap_continue = 1'b1;

assign Loop_1_proc331494_U0_ap_start = ((ap_sync_reg_Loop_1_proc331494_U0_ap_ready ^ 1'b1) & ap_start);

assign Loop_1_proc331494_U0_start_full_n = 1'b1;

assign Loop_1_proc331494_U0_start_write = 1'b0;

assign Loop_2_proc34_U0_ap_continue = 1'b1;

assign Loop_2_proc34_U0_ap_start = ((ap_sync_reg_Loop_2_proc34_U0_ap_ready ^ 1'b1) & ap_start);

assign Loop_3_proc35_U0_ap_continue = 1'b1;

assign Loop_3_proc35_U0_ap_start = start_for_Loop_3_proc35_U0_empty_n;

assign Loop_3_proc35_U0_start_full_n = 1'b1;

assign Loop_3_proc35_U0_start_write = 1'b0;

assign Loop_4_proc36_U0_ap_continue = 1'b1;

assign Loop_4_proc36_U0_ap_start = start_for_Loop_4_proc36_U0_empty_n;

assign Loop_4_proc36_U0_start_full_n = 1'b1;

assign Loop_4_proc36_U0_start_write = 1'b0;

assign ap_done = Loop_4_proc36_U0_ap_done;

assign ap_idle = (fp_add_loop_U0_ap_idle & Loop_4_proc36_U0_ap_idle & Loop_3_proc35_U0_ap_idle & Loop_2_proc34_U0_ap_idle & Loop_1_proc331494_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_Loop_1_proc331494_U0_ap_ready = (ap_sync_reg_Loop_1_proc331494_U0_ap_ready | Loop_1_proc331494_U0_ap_ready);

assign ap_sync_Loop_2_proc34_U0_ap_ready = (ap_sync_reg_Loop_2_proc34_U0_ap_ready | Loop_2_proc34_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Loop_4_proc36_U0_ap_done;

assign ap_sync_fp_add_loop_U0_ap_ready = (fp_add_loop_U0_ap_ready | ap_sync_reg_fp_add_loop_U0_ap_ready);

assign ap_sync_ready = (ap_sync_fp_add_loop_U0_ap_ready & ap_sync_Loop_2_proc34_U0_ap_ready & ap_sync_Loop_1_proc331494_U0_ap_ready);

assign fp_add_loop_U0_ap_continue = 1'b1;

assign fp_add_loop_U0_ap_start = ((ap_sync_reg_fp_add_loop_U0_ap_ready ^ 1'b1) & ap_start);

assign output_stream_TDATA = Loop_4_proc36_U0_output_stream_TDATA;

assign output_stream_TKEEP = Loop_4_proc36_U0_output_stream_TKEEP;

assign output_stream_TLAST = Loop_4_proc36_U0_output_stream_TLAST;

assign output_stream_TVALID = Loop_4_proc36_U0_output_stream_TVALID;

assign rowptr_stream_TREADY = fp_add_loop_U0_rowptr_stream_TREADY;

assign start_for_Loop_3_proc35_U0_din = 1'b1;

assign start_for_Loop_4_proc36_U0_din = 1'b1;

assign tlast_fifo_V_din = fp_add_loop_U0_tlast_fifo_V_din;

assign val_col_ind_stream_TREADY = Loop_1_proc331494_U0_val_col_ind_stream_TREADY;

endmodule //spmv_mult_axis
