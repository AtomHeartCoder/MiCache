;buildInfoPackage: chisel3, version: 3.1.1, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2018-06-21 18:49:36.391, builtAtMillis: 1529606976391
circuit TLASTGenerator : 
  module TLASTGenerator : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip mult_res : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<32>}, flip row_len : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<32>}, out : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, last : UInt<1>}}}
    
    reg state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[TLASTGenerator.scala 21:24]
    reg count : UInt<32>, clock @[TLASTGenerator.scala 23:20]
    node _T_37 = eq(UInt<1>("h00"), state) @[Conditional.scala 37:30]
    when _T_37 : @[Conditional.scala 40:58]
      node _T_39 = neq(io.row_len.bits, UInt<1>("h00")) @[TLASTGenerator.scala 26:55]
      node _T_40 = and(io.row_len.valid, _T_39) @[TLASTGenerator.scala 26:35]
      node _T_41 = and(_T_40, io.mult_res.valid) @[TLASTGenerator.scala 26:64]
      node _T_42 = and(_T_41, io.out.ready) @[TLASTGenerator.scala 26:85]
      node _T_44 = neq(io.row_len.bits, UInt<1>("h01")) @[TLASTGenerator.scala 26:121]
      node _T_45 = and(_T_42, _T_44) @[TLASTGenerator.scala 26:101]
      when _T_45 : @[TLASTGenerator.scala 26:131]
        state <= UInt<1>("h01") @[TLASTGenerator.scala 27:23]
        skip @[TLASTGenerator.scala 26:131]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_46 = eq(UInt<1>("h01"), state) @[Conditional.scala 37:30]
      when _T_46 : @[Conditional.scala 39:67]
        node _T_47 = and(io.out.ready, io.mult_res.valid) @[TLASTGenerator.scala 31:31]
        node _T_49 = sub(io.row_len.bits, UInt<1>("h01")) @[TLASTGenerator.scala 31:82]
        node _T_50 = asUInt(_T_49) @[TLASTGenerator.scala 31:82]
        node _T_51 = tail(_T_50, 1) @[TLASTGenerator.scala 31:82]
        node _T_52 = eq(count, _T_51) @[TLASTGenerator.scala 31:62]
        node _T_53 = and(_T_47, _T_52) @[TLASTGenerator.scala 31:52]
        when _T_53 : @[TLASTGenerator.scala 31:90]
          state <= UInt<1>("h00") @[TLASTGenerator.scala 32:23]
          skip @[TLASTGenerator.scala 31:90]
        skip @[Conditional.scala 39:67]
    io.out.bits.data <= io.mult_res.bits @[TLASTGenerator.scala 38:22]
    io.out.bits.last <= UInt<1>("h00") @[TLASTGenerator.scala 39:22]
    io.out.valid <= UInt<1>("h00") @[TLASTGenerator.scala 40:18]
    io.row_len.ready <= UInt<1>("h00") @[TLASTGenerator.scala 41:22]
    io.mult_res.ready <= UInt<1>("h00") @[TLASTGenerator.scala 42:23]
    node _T_58 = eq(UInt<1>("h00"), state) @[Conditional.scala 37:30]
    when _T_58 : @[Conditional.scala 40:58]
      count <= UInt<1>("h00") @[TLASTGenerator.scala 45:19]
      when io.row_len.valid : @[TLASTGenerator.scala 46:36]
        node _T_61 = eq(io.row_len.bits, UInt<1>("h00")) @[TLASTGenerator.scala 47:38]
        when _T_61 : @[TLASTGenerator.scala 47:47]
          io.out.bits.data <= UInt<1>("h00") @[TLASTGenerator.scala 48:38]
          io.out.bits.last <= UInt<1>("h01") @[TLASTGenerator.scala 49:38]
          io.out.valid <= UInt<1>("h01") @[TLASTGenerator.scala 50:34]
          io.row_len.ready <= io.out.ready @[TLASTGenerator.scala 51:38]
          skip @[TLASTGenerator.scala 47:47]
        else : @[TLASTGenerator.scala 52:48]
          when io.mult_res.valid : @[TLASTGenerator.scala 52:48]
            io.out.bits.data <= io.mult_res.bits @[TLASTGenerator.scala 53:38]
            io.out.valid <= UInt<1>("h01") @[TLASTGenerator.scala 54:34]
            node _T_67 = eq(io.row_len.bits, UInt<1>("h01")) @[TLASTGenerator.scala 55:57]
            io.out.bits.last <= _T_67 @[TLASTGenerator.scala 55:38]
            when io.out.ready : @[TLASTGenerator.scala 56:40]
              io.mult_res.ready <= UInt<1>("h01") @[TLASTGenerator.scala 57:43]
              node _T_70 = eq(io.row_len.bits, UInt<1>("h01")) @[TLASTGenerator.scala 58:46]
              when _T_70 : @[TLASTGenerator.scala 58:55]
                io.row_len.ready <= UInt<1>("h01") @[TLASTGenerator.scala 59:46]
                skip @[TLASTGenerator.scala 58:55]
              skip @[TLASTGenerator.scala 56:40]
            skip @[TLASTGenerator.scala 52:48]
        skip @[TLASTGenerator.scala 46:36]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_72 = eq(UInt<1>("h01"), state) @[Conditional.scala 37:30]
      when _T_72 : @[Conditional.scala 39:67]
        node _T_73 = and(io.out.ready, io.mult_res.valid) @[TLASTGenerator.scala 66:31]
        when _T_73 : @[TLASTGenerator.scala 66:53]
          io.out.bits.data <= io.mult_res.bits @[TLASTGenerator.scala 67:34]
          io.out.valid <= UInt<1>("h01") @[TLASTGenerator.scala 68:30]
          node _T_76 = add(count, UInt<1>("h01")) @[TLASTGenerator.scala 69:32]
          node _T_77 = tail(_T_76, 1) @[TLASTGenerator.scala 69:32]
          count <= _T_77 @[TLASTGenerator.scala 69:23]
          io.mult_res.ready <= UInt<1>("h01") @[TLASTGenerator.scala 70:35]
          node _T_80 = sub(io.row_len.bits, UInt<1>("h01")) @[TLASTGenerator.scala 71:48]
          node _T_81 = asUInt(_T_80) @[TLASTGenerator.scala 71:48]
          node _T_82 = tail(_T_81, 1) @[TLASTGenerator.scala 71:48]
          node _T_83 = eq(count, _T_82) @[TLASTGenerator.scala 71:28]
          when _T_83 : @[TLASTGenerator.scala 71:55]
            io.out.bits.last <= UInt<1>("h01") @[TLASTGenerator.scala 72:38]
            io.row_len.ready <= UInt<1>("h01") @[TLASTGenerator.scala 73:38]
            skip @[TLASTGenerator.scala 71:55]
          skip @[TLASTGenerator.scala 66:53]
        skip @[Conditional.scala 39:67]
    
